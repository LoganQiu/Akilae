---
import { getCollection, render } from "astro:content";
import SingleLayout from "@/layouts/SingleLayout.astro";
import Meta from "@/components/Meta.astro";
import TOC from "@/components/TOC.astro";
import { getPostPath, getSlugFromPath } from "@/utils/getPostPath";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  const sortedPosts = blogEntries
    .filter(entry => entry.data.draft !== true)
    .sort((a, b) => {
      const dateA = a.data.moddate || a.data.pubdate;
      const dateB = b.data.moddate || b.data.pubdate;
      return dateB.valueOf() - dateA.valueOf();
    });

  return sortedPosts.map((entry, index) => {
    const postPath = getPostPath(entry);
    const slugParam = getSlugFromPath(postPath);

    const prevPost = index > 0
      ? {
          url: getPostPath(sortedPosts[index - 1]),
          title: sortedPosts[index - 1].data.title,
        }
      : null;

    const nextPost = index < sortedPosts.length - 1
      ? {
          url: getPostPath(sortedPosts[index + 1]),
          title: sortedPosts[index + 1].data.title,
        }
      : null;

    return {
      params: { slug: slugParam },
      props: { entry, prevPost, nextPost },
    };
  });
}

const { entry, prevPost, nextPost } = Astro.props;
const { Content, headings } = await render(entry);
const ogImageUrl = `/blog/${entry.data.slug}/index.png`;
---

<SingleLayout
  title={entry.data.title}
  subtitle={entry.data.subtitle}
  description={entry.data.desc || entry.data.subtitle}
  author={entry.data.author}
  pubdate={entry.data.pubdate}
  moddate={entry.data.moddate}
  prevPost={prevPost}
  nextPost={nextPost}
  ogImage={ogImageUrl}
  katex={entry.data.katex}
>
  <article>
    <h1 transition:name={`blog-title-${entry.data.slug}`}>
      {entry.data.title}
      {
        entry.data.subtitle && (
          <small class="text-muted font-normal italic">
            {entry.data.subtitle}
          </small>
        )
      }
    </h1>
    <Meta
      transition:name={`blog-meta-${entry.data.slug}`}
      pubdate={entry.data.pubdate}
      moddate={entry.data.moddate}
      categories={entry.data.categories}
      tags={entry.data.tags}
    />
    <TOC headings={headings} />
    <Content />
  </article>
</SingleLayout>
