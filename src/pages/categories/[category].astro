---
import { getCollection } from 'astro:content';
import ListLayout from '@/layouts/ListLayout.astro';
import BlogCard from '@/components/BlogCard.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const categories = new Map<string, typeof posts>();

  posts.forEach(post => {
    post.data.categories?.forEach(category => {
      const slug = category.toLowerCase().replace(/\s+/g, '-');
      if (!categories.has(slug)) {
        categories.set(slug, []);
      }
      categories.get(slug)!.push(post);
    });
  });

  return Array.from(categories.entries()).map(([slug, posts]) => {
    const displayName = posts[0]?.data.categories?.find(c =>
      c.toLowerCase().replace(/\s+/g, '-') === slug
    ) || slug;

    return {
      params: { category: slug },
      props: { posts, displayName }
    };
  });
}

const { posts, displayName } = Astro.props;
const sortedPosts = posts.sort((a: any, b: any) => {
  const dateA = a.data.moddate || a.data.pubdate;
  const dateB = b.data.moddate || b.data.pubdate;
  return new Date(dateB).getTime() - new Date(dateA).getTime();
});
---

<ListLayout title={`Category: ${displayName}`}>
  <h1>{displayName}<span class="text-base"> | <a href="/categories/">categories</a></span></h1>
    {sortedPosts.map((post: any) => (
      <BlogCard post={post} />
    ))}
</ListLayout>
