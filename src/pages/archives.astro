---
import { getCollection } from 'astro:content';
import ListLayout from '../layouts/ListLayout.astro';
import { getPostPath } from '../utils/getPostPath';

const blogPosts = await getCollection('blog', ({ data }) => !data.draft);
const sortedPosts = blogPosts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

// Group posts by year and month
const postsByYearMonth = new Map<number, Map<string, typeof blogPosts>>();

sortedPosts.forEach(post => {
  const year = post.data.date.getFullYear();
  const month = String(post.data.date.getMonth() + 1).padStart(2, '0');

  if (!postsByYearMonth.has(year)) {
    postsByYearMonth.set(year, new Map());
  }

  const yearMap = postsByYearMonth.get(year)!;
  if (!yearMap.has(month)) {
    yearMap.set(month, []);
  }

  yearMap.get(month)!.push(post);
});

const sortedYears = Array.from(postsByYearMonth.keys()).sort((a, b) => b - a);

// Helper function to format date
const formatDate = (date: Date) => {
  const year = date.getFullYear();
  const month = String(date.getMonth() + 1).padStart(2, '0');
  const day = String(date.getDate()).padStart(2, '0');
  return `${year}-${month}-${day}`;
};
---

<ListLayout title="Archives">
  <h1>Archives</h1>
    {sortedYears.map(year => {
      const yearMap = postsByYearMonth.get(year)!;
      const sortedMonths = Array.from(yearMap.keys()).sort((a, b) => b.localeCompare(a));

      return (
        <div>
          <h2 class="border-none">{year}</h2>
          {sortedMonths.map(month => (
            <ul class="list-none flex flex-wrap gap-x-4">
              {yearMap.get(month)!.map(post => (
                <li class="inline-flex items-center gap-2">
                  <span class="text-muted whitespace-nowrap">{formatDate(post.data.date)}</span>
                  <a href={getPostPath(post)} class="no-underline hover:underline hover:decoration-wavy">{post.data.title}</a>
                </li>
              ))}
            </ul>
          ))}
        </div>
      );
    })}
</ListLayout>
