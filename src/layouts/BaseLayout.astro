---
import { ClientRouter } from "astro:transitions";
import { Font } from 'astro:assets';
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE } from "../config";
import "../styles/global.css";

export interface Props {
  title?: string;
  subtitle?: string;
  description?: string;
  keywords?: string[];
  pageType?: "home" | "single" | "list";
  author?: string;
  pubdate?: Date;
  moddate?: Date | null;
  ogImage?: string;
}

const {
  title = SITE.title,
  subtitle,
  description = SITE.desc,
  keywords = [],
  pageType = "single",
  ogImage,
} = Astro.props;

const siteTitle = SITE.title;
const pageTitle =
  title === siteTitle
    ? title
    : `${title}${subtitle ? ` - ${subtitle}` : ""} - ${siteTitle}`;

const currentPath = Astro.url.pathname;
const ogImageUrl = ogImage ? new URL(ogImage, Astro.url.origin).href : new URL('/og.png', Astro.url.origin).href;
---

<!doctype html>
<html lang={SITE.lang} dir={SITE.dir}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
    <meta property="og:title" content={pageTitle} />
    <meta property="og:type" content={pageType === "home" ? "website" : "article"} />
    <meta property="og:image" content={ogImageUrl} />
    <meta property="og:url" content={Astro.url.href} />
    <meta property="description" content={description} />
    <meta property="og:description" content={description} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={pageTitle} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImageUrl} />
    {
      keywords.length > 0 && (
        <meta property="keywords" content={keywords.join(", ")} />
      )
    }
    <link rel="alternate" type="application/rss+xml" title={SITE.title} href="/rss.xml" />

    <ClientRouter />

    {/* @ts-ignore */}
    <Font cssVariable="--font-jost" preload />
    {/* @ts-ignore */}
    <Font cssVariable="--font-libertinus" preload />

    <script is:inline src="/toggle-theme.js"></script>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"
    />
  </head>

  <body>
    <div class="crop-h"></div>
    <div class="crop-v"></div>
    <div class="crop-c"></div>
    <Header />
    <main class="flex-1 max-w-app mx-auto p-4 w-full">
      <slot />
    </main>
    <Footer />
  </body>

</html>
