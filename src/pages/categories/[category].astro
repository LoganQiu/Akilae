---
import { getCollection } from 'astro:content';
import ListLayout from '../../layouts/ListLayout.astro';
import BlogCard from '../../components/BlogCard.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const categories = new Map<string, typeof posts>();
  
  posts.forEach(post => {
    post.data.categories?.forEach(category => {
      const slug = category.toLowerCase().replace(/\s+/g, '-');
      if (!categories.has(slug)) {
        categories.set(slug, []);
      }
      categories.get(slug)!.push(post);
    });
  });
  
  return Array.from(categories.entries()).map(([slug, posts]) => {
    const displayName = posts[0]?.data.categories?.find(c => 
      c.toLowerCase().replace(/\s+/g, '-') === slug
    ) || slug;
    
    return {
      params: { category: slug },
      props: { posts, displayName }
    };
  });
}

const { posts, displayName } = Astro.props;
const sortedPosts = posts.sort((a: any, b: any) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
---

<ListLayout title={`Category: ${displayName}`}>
  <h1 class="title">{displayName}<span class="small subtitle"> | <a href="/categories/">categories</a></span></h1>
  <div class="main archive">
    {sortedPosts.map((post: any) => (
      <BlogCard post={post} showSubtitle={true} />
    ))}
  </div>
</ListLayout>